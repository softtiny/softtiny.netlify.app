<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.38.0 (20140413.2041)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="1840pt" height="1900pt"
 viewBox="0.00 0.00 1840.00 1900.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1896)">
<title>%3</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-1896 1836,-1896 1836,4 -4,4"/>
<g id="clust1" class="cluster"><title>cluster_box</title>
<polygon fill="none" stroke="black" stroke-width="0.1" points="8,-8 8,-1884 1824,-1884 1824,-8 8,-8"/>
</g>
<!-- start -->
<g id="node1" class="node"><title>start</title>
<ellipse fill="#ffffcd" stroke="black" stroke-width="0.1" cx="232" cy="-1373" rx="216" ry="36"/>
<text text-anchor="middle" x="232" y="-1369.2" font-family="Microsoft YaHei" font-size="16.00">Apache Airflow Tutorial</text>
</g>
<!-- pipeline -->
<g id="node2" class="node"><title>pipeline</title>
<path fill="none" stroke="black" d="M904,-909C904,-909 496,-909 496,-909 490,-909 484,-903 484,-897 484,-897 484,-849 484,-849 484,-843 490,-837 496,-837 496,-837 904,-837 904,-837 910,-837 916,-843 916,-849 916,-849 916,-897 916,-897 916,-903 910,-909 904,-909"/>
<text text-anchor="middle" x="700" y="-869.2" font-family="Microsoft YaHei" font-size="16.00">Example Pipeline definition</text>
</g>
<!-- start&#45;&gt;pipeline -->
<g id="edge1" class="edge"><title>start&#45;&gt;pipeline</title>
<path fill="none" stroke="black" d="M249.69,-1336.96C284.599,-1264.66 371.5,-1099.88 484,-995 520.875,-960.621 569.178,-932.105 610.658,-911.31"/>
<polygon fill="black" stroke="black" points="615.164,-909.067 611.69,-913.309 612.926,-910.181 610.688,-911.295 610.688,-911.295 610.688,-911.295 612.926,-910.181 609.685,-909.281 615.164,-909.067 615.164,-909.067"/>
</g>
<!-- DAG -->
<g id="node3" class="node"><title>DAG</title>
<path fill="none" stroke="black" d="M904,-1085C904,-1085 496,-1085 496,-1085 490,-1085 484,-1079 484,-1073 484,-1073 484,-1025 484,-1025 484,-1019 490,-1013 496,-1013 496,-1013 904,-1013 904,-1013 910,-1013 916,-1019 916,-1025 916,-1025 916,-1073 916,-1073 916,-1079 910,-1085 904,-1085"/>
<text text-anchor="middle" x="700" y="-1045.2" font-family="Microsoft YaHei" font-size="16.00">It&#39;s a DAG definition file</text>
</g>
<!-- start&#45;&gt;DAG -->
<g id="edge2" class="edge"><title>start&#45;&gt;DAG</title>
<path fill="none" stroke="black" d="M256.052,-1337.07C295.46,-1278.66 381.529,-1163.59 484,-1103 494.073,-1097.04 504.786,-1091.74 515.846,-1087.02"/>
<polygon fill="black" stroke="black" points="520.606,-1085.03 516.859,-1089.04 518.299,-1086 515.992,-1086.96 515.992,-1086.96 515.992,-1086.96 518.299,-1086 515.125,-1084.88 520.606,-1085.03 520.606,-1085.03"/>
</g>
<!-- import -->
<g id="node4" class="node"><title>import</title>
<path fill="none" stroke="black" d="M904,-1193C904,-1193 496,-1193 496,-1193 490,-1193 484,-1187 484,-1181 484,-1181 484,-1133 484,-1133 484,-1127 490,-1121 496,-1121 496,-1121 904,-1121 904,-1121 910,-1121 916,-1127 916,-1133 916,-1133 916,-1181 916,-1181 916,-1187 910,-1193 904,-1193"/>
<text text-anchor="middle" x="700" y="-1153.2" font-family="Microsoft YaHei" font-size="16.00">Importing Modules</text>
</g>
<!-- start&#45;&gt;import -->
<g id="edge3" class="edge"><title>start&#45;&gt;import</title>
<path fill="none" stroke="black" d="M277.606,-1337.72C325.9,-1301.14 406.454,-1244.67 484,-1211 497.797,-1205.01 512.392,-1199.59 527.22,-1194.71"/>
<polygon fill="black" stroke="black" points="532.257,-1193.07 528.196,-1196.76 529.879,-1193.84 527.501,-1194.62 527.501,-1194.62 527.501,-1194.62 529.879,-1193.84 526.806,-1192.48 532.257,-1193.07 532.257,-1193.07"/>
</g>
<!-- default -->
<g id="node5" class="node"><title>default</title>
<path fill="none" stroke="black" d="M904,-1301C904,-1301 496,-1301 496,-1301 490,-1301 484,-1295 484,-1289 484,-1289 484,-1241 484,-1241 484,-1235 490,-1229 496,-1229 496,-1229 904,-1229 904,-1229 910,-1229 916,-1235 916,-1241 916,-1241 916,-1289 916,-1289 916,-1295 910,-1301 904,-1301"/>
<text text-anchor="middle" x="700" y="-1261.2" font-family="Microsoft YaHei" font-size="16.00">Default Arguments</text>
</g>
<!-- start&#45;&gt;default -->
<g id="edge4" class="edge"><title>start&#45;&gt;default</title>
<path fill="none" stroke="black" d="M358.799,-1343.84C414.121,-1331.02 479.754,-1315.81 538.543,-1302.19"/>
<polygon fill="black" stroke="black" points="543.484,-1301.04 539.121,-1304.36 541.049,-1301.61 538.613,-1302.17 538.613,-1302.17 538.613,-1302.17 541.049,-1301.61 538.105,-1299.98 543.484,-1301.04 543.484,-1301.04"/>
</g>
<!-- instantiate -->
<g id="node6" class="node"><title>instantiate</title>
<path fill="none" stroke="black" d="M904,-1409C904,-1409 496,-1409 496,-1409 490,-1409 484,-1403 484,-1397 484,-1397 484,-1349 484,-1349 484,-1343 490,-1337 496,-1337 496,-1337 904,-1337 904,-1337 910,-1337 916,-1343 916,-1349 916,-1349 916,-1397 916,-1397 916,-1403 910,-1409 904,-1409"/>
<text text-anchor="middle" x="700" y="-1369.2" font-family="Microsoft YaHei" font-size="16.00">Instantiate a DAG</text>
</g>
<!-- start&#45;&gt;instantiate -->
<g id="edge5" class="edge"><title>start&#45;&gt;instantiate</title>
<path fill="none" stroke="black" d="M448.267,-1373C458.32,-1373 468.416,-1373 478.482,-1373"/>
<polygon fill="black" stroke="black" points="483.742,-1373 478.742,-1375.25 481.242,-1373 478.742,-1373 478.742,-1373 478.742,-1373 481.242,-1373 478.742,-1370.75 483.742,-1373 483.742,-1373"/>
</g>
<!-- tasks -->
<g id="node7" class="node"><title>tasks</title>
<path fill="none" stroke="black" d="M904,-1517C904,-1517 496,-1517 496,-1517 490,-1517 484,-1511 484,-1505 484,-1505 484,-1457 484,-1457 484,-1451 490,-1445 496,-1445 496,-1445 904,-1445 904,-1445 910,-1445 916,-1451 916,-1457 916,-1457 916,-1505 916,-1505 916,-1511 910,-1517 904,-1517"/>
<text text-anchor="middle" x="700" y="-1477.2" font-family="Microsoft YaHei" font-size="16.00">Tasks</text>
</g>
<!-- start&#45;&gt;tasks -->
<g id="edge6" class="edge"><title>start&#45;&gt;tasks</title>
<path fill="none" stroke="black" d="M358.799,-1402.16C414.121,-1414.98 479.754,-1430.19 538.543,-1443.81"/>
<polygon fill="black" stroke="black" points="543.484,-1444.96 538.105,-1446.02 541.049,-1444.39 538.613,-1443.83 538.613,-1443.83 538.613,-1443.83 541.049,-1444.39 539.121,-1441.64 543.484,-1444.96 543.484,-1444.96"/>
</g>
<!-- template -->
<g id="node8" class="node"><title>template</title>
<path fill="none" stroke="black" d="M904,-1625C904,-1625 496,-1625 496,-1625 490,-1625 484,-1619 484,-1613 484,-1613 484,-1565 484,-1565 484,-1559 490,-1553 496,-1553 496,-1553 904,-1553 904,-1553 910,-1553 916,-1559 916,-1565 916,-1565 916,-1613 916,-1613 916,-1619 910,-1625 904,-1625"/>
<text text-anchor="middle" x="700" y="-1585.2" font-family="Microsoft YaHei" font-size="16.00">Templating with Jinja</text>
</g>
<!-- start&#45;&gt;template -->
<g id="edge7" class="edge"><title>start&#45;&gt;template</title>
<path fill="none" stroke="black" d="M277.606,-1408.28C325.9,-1444.86 406.454,-1501.33 484,-1535 497.797,-1540.99 512.392,-1546.41 527.22,-1551.29"/>
<polygon fill="black" stroke="black" points="532.257,-1552.93 526.806,-1553.52 529.879,-1552.16 527.501,-1551.38 527.501,-1551.38 527.501,-1551.38 529.879,-1552.16 528.196,-1549.24 532.257,-1552.93 532.257,-1552.93"/>
</g>
<!-- doc -->
<g id="node9" class="node"><title>doc</title>
<path fill="none" stroke="black" d="M904,-1733C904,-1733 496,-1733 496,-1733 490,-1733 484,-1727 484,-1721 484,-1721 484,-1673 484,-1673 484,-1667 490,-1661 496,-1661 496,-1661 904,-1661 904,-1661 910,-1661 916,-1667 916,-1673 916,-1673 916,-1721 916,-1721 916,-1727 910,-1733 904,-1733"/>
<text text-anchor="middle" x="700" y="-1693.2" font-family="Microsoft YaHei" font-size="16.00">Adding DAG and Tasks documentation</text>
</g>
<!-- start&#45;&gt;doc -->
<g id="edge8" class="edge"><title>start&#45;&gt;doc</title>
<path fill="none" stroke="black" d="M256.052,-1408.93C295.46,-1467.34 381.529,-1582.41 484,-1643 494.073,-1648.96 504.786,-1654.26 515.846,-1658.98"/>
<polygon fill="black" stroke="black" points="520.606,-1660.97 515.125,-1661.12 518.299,-1660 515.992,-1659.04 515.992,-1659.04 515.992,-1659.04 518.299,-1660 516.859,-1656.96 520.606,-1660.97 520.606,-1660.97"/>
</g>
<!-- dependencies -->
<g id="node10" class="node"><title>dependencies</title>
<path fill="none" stroke="black" d="M904,-1841C904,-1841 496,-1841 496,-1841 490,-1841 484,-1835 484,-1829 484,-1829 484,-1781 484,-1781 484,-1775 490,-1769 496,-1769 496,-1769 904,-1769 904,-1769 910,-1769 916,-1775 916,-1781 916,-1781 916,-1829 916,-1829 916,-1835 910,-1841 904,-1841"/>
<text text-anchor="middle" x="700" y="-1801.2" font-family="Microsoft YaHei" font-size="16.00">Setting up Dependencies</text>
</g>
<!-- start&#45;&gt;dependencies -->
<g id="edge9" class="edge"><title>start&#45;&gt;dependencies</title>
<path fill="none" stroke="black" d="M246.429,-1409.13C276.545,-1484.97 356.957,-1661.19 484,-1751 492.237,-1756.82 501.041,-1762.02 510.21,-1766.66"/>
<polygon fill="black" stroke="black" points="514.74,-1768.89 509.26,-1768.7 512.497,-1767.78 510.255,-1766.68 510.255,-1766.68 510.255,-1766.68 512.497,-1767.78 511.249,-1764.66 514.74,-1768.89 514.74,-1768.89"/>
</g>
<!-- pipeline_doc -->
<g id="node11" class="node"><title>pipeline_doc</title>
<polygon fill="#ccffcc" stroke="black" stroke-width="0.1" points="1816,-1662 952,-1662 952,-16 1816,-16 1816,-1662"/>
<text text-anchor="start" x="959" y="-1585.2" font-family="Microsoft YaHei" font-size="16.00">from datetime import timedelta</text>
<text text-anchor="start" x="959" y="-1567.2" font-family="Microsoft YaHei" font-size="16.00">from textwrap import dedent</text>
<text text-anchor="start" x="959" y="-1530.2" font-family="Microsoft YaHei" font-size="16.00"># The DAG object; we&#39;ll need this to instantiate a DAG</text>
<text text-anchor="start" x="959" y="-1512.2" font-family="Microsoft YaHei" font-size="16.00">from airflow import DAG</text>
<text text-anchor="start" x="959" y="-1475.2" font-family="Microsoft YaHei" font-size="16.00"># Operators; we need this to operate!</text>
<text text-anchor="start" x="959" y="-1457.2" font-family="Microsoft YaHei" font-size="16.00">from airflow.operators.bash import BashOperator</text>
<text text-anchor="start" x="959" y="-1439.2" font-family="Microsoft YaHei" font-size="16.00">from airflow.utils.dates import days_ago</text>
<text text-anchor="start" x="959" y="-1421.2" font-family="Microsoft YaHei" font-size="16.00"># These args will get passed on to each operator</text>
<text text-anchor="start" x="959" y="-1403.2" font-family="Microsoft YaHei" font-size="16.00"># You can override them on a per&#45;task basis during operator initialization</text>
<text text-anchor="start" x="959" y="-1385.2" font-family="Microsoft YaHei" font-size="16.00">default_args = {</text>
<text text-anchor="start" x="959" y="-1367.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#39;owner&#39;: &#39;airflow&#39;,</text>
<text text-anchor="start" x="959" y="-1349.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#39;depends_on_past&#39;: False,</text>
<text text-anchor="start" x="959" y="-1331.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#39;email&#39;: [&#39;airflow@example.com&#39;],</text>
<text text-anchor="start" x="959" y="-1313.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#39;email_on_failure&#39;: False,</text>
<text text-anchor="start" x="959" y="-1295.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#39;email_on_retry&#39;: False,</text>
<text text-anchor="start" x="959" y="-1277.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#39;retries&#39;: 1,</text>
<text text-anchor="start" x="959" y="-1259.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#39;retry_delay&#39;: timedelta(minutes=5),</text>
<text text-anchor="start" x="959" y="-1241.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;queue&#39;: &#39;bash_queue&#39;,</text>
<text text-anchor="start" x="959" y="-1223.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;pool&#39;: &#39;backfill&#39;,</text>
<text text-anchor="start" x="959" y="-1205.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;priority_weight&#39;: 10,</text>
<text text-anchor="start" x="959" y="-1187.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;end_date&#39;: datetime(2016, 1, 1),</text>
<text text-anchor="start" x="959" y="-1169.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;wait_for_downstream&#39;: False,</text>
<text text-anchor="start" x="959" y="-1151.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;dag&#39;: dag,</text>
<text text-anchor="start" x="959" y="-1133.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;sla&#39;: timedelta(hours=2),</text>
<text text-anchor="start" x="959" y="-1115.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;execution_timeout&#39;: timedelta(seconds=300),</text>
<text text-anchor="start" x="959" y="-1097.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;on_failure_callback&#39;: some_function,</text>
<text text-anchor="start" x="959" y="-1079.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;on_success_callback&#39;: some_other_function,</text>
<text text-anchor="start" x="959" y="-1061.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;on_retry_callback&#39;: another_function,</text>
<text text-anchor="start" x="959" y="-1043.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;sla_miss_callback&#39;: yet_another_function,</text>
<text text-anchor="start" x="959" y="-1025.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# &#39;trigger_rule&#39;: &#39;all_success&#39;</text>
<text text-anchor="start" x="959" y="-1007.2" font-family="Microsoft YaHei" font-size="16.00">}</text>
<text text-anchor="start" x="959" y="-989.2" font-family="Microsoft YaHei" font-size="16.00">with DAG(</text>
<text text-anchor="start" x="959" y="-971.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#39;tutorial&#39;,</text>
<text text-anchor="start" x="959" y="-953.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;default_args=default_args,</text>
<text text-anchor="start" x="959" y="-935.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;description=&#39;A simple tutorial DAG&#39;,</text>
<text text-anchor="start" x="959" y="-917.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;schedule_interval=timedelta(days=1),</text>
<text text-anchor="start" x="959" y="-899.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;start_date=days_ago(2),</text>
<text text-anchor="start" x="959" y="-881.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;tags=[&#39;example&#39;],</text>
<text text-anchor="start" x="959" y="-863.2" font-family="Microsoft YaHei" font-size="16.00">) as dag:</text>
<text text-anchor="start" x="959" y="-826.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;# t1, t2 and t3 are examples of tasks created by instantiating operators</text>
<text text-anchor="start" x="959" y="-808.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;t1 = BashOperator(</text>
<text text-anchor="start" x="959" y="-790.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;task_id=&#39;print_date&#39;,</text>
<text text-anchor="start" x="959" y="-772.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;bash_command=&#39;date&#39;,</text>
<text text-anchor="start" x="959" y="-754.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;)</text>
<text text-anchor="start" x="959" y="-717.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;t2 = BashOperator(</text>
<text text-anchor="start" x="959" y="-699.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;task_id=&#39;sleep&#39;,</text>
<text text-anchor="start" x="959" y="-681.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;depends_on_past=False,</text>
<text text-anchor="start" x="959" y="-663.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;bash_command=&#39;sleep 5&#39;,</text>
<text text-anchor="start" x="959" y="-645.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;retries=3,</text>
<text text-anchor="start" x="959" y="-627.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;)</text>
<text text-anchor="start" x="959" y="-609.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;t1.doc_md = dedent(</text>
<text text-anchor="start" x="959" y="-591.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&quot;&quot; &#160;&#160;&#160;#### Task Documentation</text>
<text text-anchor="start" x="959" y="-573.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;You can document your task using the attributes `doc_md` (markdown),</text>
<text text-anchor="start" x="959" y="-555.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;`doc` (plain text), `doc_rst`, `doc_json`, `doc_yaml` which gets</text>
<text text-anchor="start" x="959" y="-537.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;rendered in the UI&#39;s Task Instance Details page.</text>
<text text-anchor="start" x="959" y="-519.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;![img](http://montcs.bloomu.edu/~bobmon/Semesters/2012&#45;01/491/import%20soul.png)</text>
<text text-anchor="start" x="959" y="-482.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&quot;&quot;&quot;</text>
<text text-anchor="start" x="959" y="-464.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;)</text>
<text text-anchor="start" x="959" y="-427.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;dag.doc_md = __doc__ &#160;# providing that you have a docstring at the beggining of the DAG</text>
<text text-anchor="start" x="959" y="-409.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;dag.doc_md = &quot;&quot;&quot;</text>
<text text-anchor="start" x="959" y="-391.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;This is a documentation placed anywhere</text>
<text text-anchor="start" x="959" y="-373.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&quot;&quot;&quot; &#160;# otherwise, type it like this</text>
<text text-anchor="start" x="959" y="-355.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;templated_command = dedent(</text>
<text text-anchor="start" x="959" y="-337.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&quot;&quot;</text>
<text text-anchor="start" x="959" y="-319.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;{% for i in range(5) %}</text>
<text text-anchor="start" x="959" y="-301.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;echo &quot;{{ ds }}&quot;</text>
<text text-anchor="start" x="959" y="-283.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;echo &quot;{{ macros.ds_add(ds, 7)}}&quot;</text>
<text text-anchor="start" x="959" y="-265.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;echo &quot;{{ params.my_param }}&quot;</text>
<text text-anchor="start" x="959" y="-247.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;{% endfor %}</text>
<text text-anchor="start" x="959" y="-229.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&quot;&quot;&quot;</text>
<text text-anchor="start" x="959" y="-211.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;)</text>
<text text-anchor="start" x="959" y="-174.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;t3 = BashOperator(</text>
<text text-anchor="start" x="959" y="-156.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;task_id=&#39;templated&#39;,</text>
<text text-anchor="start" x="959" y="-138.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;depends_on_past=False,</text>
<text text-anchor="start" x="959" y="-120.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;bash_command=templated_command,</text>
<text text-anchor="start" x="959" y="-102.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;params={&#39;my_param&#39;: &#39;Parameter I passed in&#39;},</text>
<text text-anchor="start" x="959" y="-84.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;)</text>
<text text-anchor="start" x="959" y="-47.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;&#160;&#160;t1 &gt;&gt; [t2, t3]</text>
</g>
<!-- pipeline&#45;&gt;pipeline_doc -->
<g id="edge10" class="edge"><title>pipeline&#45;&gt;pipeline_doc</title>
<path fill="none" stroke="black" d="M916.321,-862.266C926.301,-861.768 936.447,-861.262 946.719,-860.75"/>
<polygon fill="black" stroke="black" points="951.772,-860.498 946.89,-862.994 949.275,-860.623 946.778,-860.747 946.778,-860.747 946.778,-860.747 949.275,-860.623 946.666,-858.5 951.772,-860.498 951.772,-860.498"/>
</g>
<!-- DAG_doc -->
<g id="node12" class="node"><title>DAG_doc</title>
<polygon fill="#ccffcc" stroke="black" stroke-width="0.1" points="1816,-1876 952,-1876 952,-1698 1816,-1698 1816,-1876"/>
<text text-anchor="start" x="959" y="-1818.2" font-family="Microsoft YaHei" font-size="16.00"> Airflow Python script is really just a configuration file specifying the DAG&#39;s structure as code. </text>
<text text-anchor="start" x="959" y="-1800.2" font-family="Microsoft YaHei" font-size="16.00"> The actual tasks defined here will run in a different context from the context of this script.</text>
<text text-anchor="start" x="959" y="-1782.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;Different tasks run on different workers at different points in time, </text>
<text text-anchor="start" x="959" y="-1764.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;which means that this script cannot be used to cross communicate between tasks.</text>
<text text-anchor="start" x="959" y="-1746.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;The script&#39;s purpose is to define a DAG object. It needs to evaluate quickly (seconds, not minutes) </text>
<text text-anchor="start" x="959" y="-1728.2" font-family="Microsoft YaHei" font-size="16.00"> &#160;since the scheduler will execute it periodically to reflect the changes if any.</text>
<text text-anchor="start" x="959" y="-1710.2" font-family="Microsoft YaHei" font-size="16.00"> </text>
</g>
<!-- DAG&#45;&gt;DAG_doc -->
<g id="edge11" class="edge"><title>DAG&#45;&gt;DAG_doc</title>
<path fill="none" stroke="black" d="M897.494,-1085.2C904.241,-1090.44 910.465,-1096.34 916,-1103 998.125,-1201.79 869.74,-1581.32 952,-1680 956.05,-1684.86 960.282,-1689.51 964.682,-1693.98"/>
<polygon fill="black" stroke="black" points="968.416,-1697.68 963.282,-1695.76 966.641,-1695.92 964.866,-1694.16 964.866,-1694.16 964.866,-1694.16 966.641,-1695.92 966.45,-1692.56 968.416,-1697.68 968.416,-1697.68"/>
</g>
</g>
</svg>
